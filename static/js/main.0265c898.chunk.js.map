{"version":3,"sources":["services/api-service.js","components/EmployeesList/index.js","assets/note.png","components/EmployeeDetails/index.js","components/App/index.js","index.js"],"names":["APIservice","a","fetch","res","ok","Error","URL","status","json","this","getResource","data","map","_mapEmployeeBirthday","employee","date","Date","dob","month","getMonth","day","getDate","year","getFullYear","firstName","lastName","id","isActive","EmployeesList","employees","getEmployeeDetails","className","letter","toUpperCase","UlItem","filteredByLetter","filter","sort","e1","e2","getActiveEmployee","details","length","LiItem","useState","setIsActive","useEffect","onChange","e","target","name","handleChange","type","prevState","checked","htmlFor","EmlpoyeeDetails","monthNames","months","setMonths","end","slice","start","filteredEmployees","src","emptyList","alt","App","setEmployees","activeEmployees","setActiveEmployees","api","localStorage","getItem","employeesFromLocalStorage","JSON","parse","getMappedEmployees","then","setItem","stringify","updated","Set","Array","from","activeEmployee","find","handleActiveEmployees","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0265c898.chunk.js","sourcesContent":["\n\nclass APIservice {\n\n   async getResource() {\n       const res = await fetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n     \n       if (!res.ok) {\n            throw new Error(`Could not fetch ${URL},\n            error status ${res.status}`)\n       }  \n   \n        return await res.json()\n   }\n\n   async getMappedEmployees() {\n     const data = await this.getResource()\n     return data.map(this._mapEmployeeBirthday)\n     }\n\n   _mapEmployeeBirthday(employee) {\n     const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n     const date = new Date(employee.dob)\n\n     const month = monthNames[date.getMonth()]\n     const day = date.getDate()\n     const year = date.getFullYear()\n     \n     return {\n          firstName: employee.firstName,\n          lastName: employee.lastName,\n          id: employee.id,\n          isActive: false,\n          dob: { day: day, month: month, year: year},\n          \n     }        \n   }\n}\n\nexport { APIservice }","\nimport React, { useEffect } from 'react'\nimport './EmployeesList.css'\nimport { useState } from 'react'\n\n\nexport default function EmployeesList({employees, getEmployeeDetails}) {\n\n    const alphabet = [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\n    'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']  \n\n    return (\n        <div className='employees-list'>\n              <h1> Say <span>HAPPY BIRTHDAY </span> to your employees </h1> \n            {\n                alphabet.map(letter => {\n                return <div className='letter-card' key={letter}>\n                        <h2> {letter.toUpperCase()} </h2>\n                        <UlItem filteredByLetter={employees\n                                .filter(employee => employee.firstName[0] === letter.toUpperCase())\n                                .sort((e1, e2) => e1.firstName > e2.firstName ? 1 : -1)}\n                            getActiveEmployee={(details) => getEmployeeDetails(details)} \n                        />\n                </div>\n                })\n            }\n        </div>\n    )\n}\n\nfunction UlItem({filteredByLetter: employees, getActiveEmployee}) {\n\n    return (\n        <ul>\n            {employees.length !== 0 ? \n            employees.map(employee => \n                <LiItem \n                    employee={employee}\n                    getActiveEmployee={(details) => getActiveEmployee(details)}\n                />)\n                : <p> No Employees </p>\n                }\n        </ul>\n    ) \n}\n\nfunction LiItem({employee, getActiveEmployee}) {\n\n    const [isActive, setIsActive] = useState(false)\n    \n    useEffect(() => {\n        setIsActive(employee.isActive)\n    }, [isActive])\n\n    const handleChange = (e) => {\n        getActiveEmployee({id: e.target.name, isActive})\n    }\n\n    return (\n        <li key={employee.id} id={employee.id} className={isActive ? 'active' : 'not-active'}>\n            {employee.firstName + ' ' + employee.lastName} \n            <form onChange={(e) => handleChange(e)}>\n            <input type='radio' id='active' name={employee.id}\n                onChange={() => setIsActive(prevState => !prevState)}\n                checked={isActive}/>\n            <label htmlFor='active'>Active</label>\n            <br />\n            <input type='radio' id='notActive' name={employee.id} \n                onChange={() => setIsActive(prevState => !prevState)}\n                checked={!isActive}/>\n            <label htmlFor='notActive'>Not Active</label>\n            </form>\n    </li>\n    )\n}","export default __webpack_public_path__ + \"static/media/note.f2c92ba0.png\";","import './EmployeeDetails.css'\nimport { useEffect, useState } from 'react'\nimport emptyList from '../../assets/note.png'\n\nexport default function EmlpoyeeDetails({employees}) {\n\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    const [months, setMonths] = useState([])\n\n    useEffect(() => {\n        let date = new Date()\n        let end = monthNames.slice(0, date.getMonth() - 1)\n        let start = monthNames.slice(date.getMonth())\n\n        setMonths([...start, ...end])\n    }, [])\n  \n    return(\n        <div className='employees-details'>\n            <h2 >Employees BirthDays </h2>\n            <div className='month-cards'>\n            { employees.length !== 0 ?\n                months.map(month => \n                <div className='month-card' key={month}>\n                    <h3>{month}</h3>\n                    <UlItem filteredEmployees={employees\n                        .filter(employee => employee.dob.month === month)\n                        .sort((e1, e2) => e1.lastName > e2.lastName ? 1 : -1)\n                    } />\n                </div>) : \n                <p className='empty'>Employees list is empty\n                    <img src={emptyList} alt='icon'/>\n                </p>\n            }\n            </div>\n        </div>\n    )\n}\n\nfunction UlItem({filteredEmployees: employees}) {\n\nreturn (\n    <ul>\n        {\n            employees.length !== 0 ?\n            employees.map(employee => \n            <li key={employee.id}> {`${employee.lastName} ${employee.firstName}\n             - ${employee.dob.month} ${employee.dob.day}, \n             ${employee.dob.year} year`}</li>)\n            : <p>No Employees</p>\n        }\n    </ul>\n)\n    \n}","\nimport { APIservice } from '../../services/api-service'\nimport { useEffect, useState } from 'react'\nimport EmployeesList from '../EmployeesList'\nimport EmployeeDetails from '../EmployeeDetails'\n\nimport './App.css';\n\nfunction App() {\n\n  const [employees, setEmployees] = useState([])\n  const [activeEmployees, setActiveEmployees] = useState([])\n\n  const handleActiveEmployees = ({id, isActive}) => {\n\n      const activeEmployee = employees.find(employee => employee.id === id)\n      activeEmployee.isActive = !isActive\n\n      if (!isActive) {\n        setActiveEmployees(prevState => {\n          let exists = prevState.find(employee => employee.id === id)\n          if(exists) {\n            return prevState\n          } else {\n           return [...prevState, activeEmployee]\n          }\n        }) \n      } else {\n        setActiveEmployees(prevState => {\n          return prevState.filter(employee => employee.id !== id)\n        }) \n      }\n     \n  }\n\n  useEffect(() => {\n    const api = new APIservice()\n\n    if (localStorage.getItem('employees')) {\n      let employeesFromLocalStorage = JSON.parse(localStorage.getItem('employees'))\n      setEmployees(employeesFromLocalStorage)\n      setActiveEmployees(employeesFromLocalStorage .filter(employee => employee.isActive === true)) \n    } else {\n      api.getMappedEmployees()\n        .then(data => {\n          setEmployees(data)\n          localStorage.setItem('employees', JSON.stringify(data))\n        })\n      }\n    }, [])\n\n  useEffect(() => {\n    if (employees.length !== 0) {\n      let updated = new Set([...employees, ...activeEmployees])\n      localStorage.setItem('employees', JSON.stringify(Array.from(updated)))\n    }\n  }, [activeEmployees, employees])\n\n  return (\n    <div className=\"app\">\n       <EmployeesList \n        employees={employees}\n        getEmployeeDetails={(details) => handleActiveEmployees(details)} />\n       <EmployeeDetails employees={activeEmployees} />  \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}